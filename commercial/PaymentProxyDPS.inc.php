<?php
/*
copyright Brian Bannister 2004

This file is part of Open Store. http://openstore.org/

Open Store is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

Open Store is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Open Store; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
*/
?><?PHP

require_once('business/Config.inc.php');
require_once('business/PaymentProxy.inc.php');

/*
 * An implementation of the payment proxy that uses a proprietary provider
 */
class PaymentProxyDPS extends PaymentProxy {
    
    function PaymentProxyDPS(&$config) {
        parent::PaymentProxy($config);
    }
    
    
	/**
	 * public:
	 * Makes a payment to our company through the proprietary gateway
	 * $name the name on the card
	 * $amount in dollars, eg '12', '18.50'
	 * $ccnum the bare number eg 4111111111111111
	 * $ccmm expiry month of card 01 .. 12
	 * $ccyy expiry year of card 04 .. 99
	 * $orderId the unique reference number that will be used to identify this order
	 * returns a GatewayResponse object.
	 */	
	function &makePayment($name, $amount, $ccnum, $ccmm, $ccyy, $orderId) {
		$userName = $this->config->getGatewayUserName();
		$password = $this->config->getGatewayPassword();
		$URL = $this->config->getGatewayUrl();
		
		$expiry = sprintf("%02d%02d", htmlspecialchars($ccmm), htmlspecialchars($ccyy));
		$formattedAmount = sprintf("%01.2f", htmlspecialchars($amount));
		
		$name = htmlspecialchars($name);
		$ccnum = htmlspecialchars($ccnum);
		$orderId = htmlspecialchars($orderId);
		
		// send the query
			   
		
		// then parse the result
		return $this->parse_xml($result);
	}
	
	function &parse_xml($data) {
	    $result = new GatewayResponse();
	    // populate this with dummy data to make the demo shop work correctly.
	    $result->success = true;
	    $result->MerchantResponseText = 'Dummy payment generated by OpenStore demo';
	    return $result;
	}

}
?>
